-- MySQL Script generated by MySQL Workbench
-- śro, 9 maj 2018, 19:44:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema auctions
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `auctions`
  DEFAULT CHARACTER SET utf8;
USE `auctions`;

-- -----------------------------------------------------
-- Table `auctions`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`categories` (
  `category_id` INT(11)    NOT NULL AUTO_INCREMENT,
  `nazwa`       VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NOT NULL,
  PRIMARY KEY (`category_id`)
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`subcategories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`subcategories` (
  `subcategory_id`     INT(11) NOT NULL AUTO_INCREMENT,
  `parent_category_id` INT(11) NOT NULL,
  `nazwa`              VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci'     NOT NULL,
  PRIMARY KEY (`subcategory_id`, `parent_category_id`),
  INDEX `fk_subcategories_categories1_idx` (`parent_category_id` ASC),
  CONSTRAINT `fk_subcategories_categories1`
  FOREIGN KEY (`parent_category_id`)
  REFERENCES `auctions`.`categories` (`category_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`users` (
  `user_id`   INT(11)      NOT NULL AUTO_INCREMENT,
  `login`     VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NOT NULL,
  `password`  VARCHAR(255) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NOT NULL,
  `is_admin`  TINYINT(4)   NULL     DEFAULT '0',
  `email`     VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  `telephone` VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  PRIMARY KEY (`user_id`)
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`auctions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`auctions` (
  `auction_id`     INT(11) NOT NULL AUTO_INCREMENT,
  `user_id`        INT(11) NOT NULL,
  `description`    TEXT CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  `title`          VARCHAR(60) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  `subcategory_id` INT(11) NOT NULL,
  `date`           TIMESTAMP        DEFAULT CURRENT_TIMESTAMP,
  `completed`      TINYINT          DEFAULT 0,
  PRIMARY KEY (`auction_id`, `user_id`, `subcategory_id`),
  INDEX `fk_aukcje_users1_idx` (`user_id` ASC),
  INDEX `fk_auctions_subcategories1_idx` (`subcategory_id` ASC),
  CONSTRAINT `fk_auctions_subcategories1`
  FOREIGN KEY (`subcategory_id`)
  REFERENCES `auctions`.`subcategories` (`subcategory_id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_aukcje_users1`
  FOREIGN KEY (`user_id`)
  REFERENCES `auctions`.`users` (`user_id`)
    ON DELETE RESTRICT
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`comments` (
  `comment_id` INT(11)     NOT NULL AUTO_INCREMENT,
  `seller_id`  INT(11)     NOT NULL,
  `user_id`    INT(11)     NOT NULL,
  `content`    TEXT CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  `date`       TIMESTAMP            DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`comment_id`, `user_id`, `seller_id`),
  INDEX `fk_comments_users1_idx` (`seller_id` ASC),
  INDEX `fk_comments_users2_idx` (`user_id` ASC),
  CONSTRAINT `fk_comments_users1`
  FOREIGN KEY (`seller_id`)
  REFERENCES `auctions`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comments_users2`
  FOREIGN KEY (`user_id`)
  REFERENCES `auctions`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`offers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`offers` (
  `offer_id`    INT(11)       NOT NULL AUTO_INCREMENT,
  `auction_id`  INT(11)       NOT NULL,
  `price`       decimal(6, 2) not null DEFAULT 0.0,
  `date`        TIMESTAMP              DEFAULT CURRENT_TIMESTAMP,
  `customer_id` INT(11)       NOT NULL,
  PRIMARY KEY (`offer_id`, `auction_id`, `customer_id`),
  INDEX `fk_offers_auctions1_idx` (`auction_id` ASC),
  INDEX `fk_offers_users1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_offers_auctions1`
  FOREIGN KEY (`auction_id`)
  REFERENCES `auctions`.`auctions` (`auction_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_offers_users1`
  FOREIGN KEY (`customer_id`)
  REFERENCES `auctions`.`users` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`products` (
  `product_id` INT(11)     NOT NULL AUTO_INCREMENT,
  `auction_id` INT(11)     NOT NULL,
  `name`       VARCHAR(45) CHARACTER SET 'utf8'
  COLLATE 'utf8_polish_ci' NULL     DEFAULT NULL,
  PRIMARY KEY (`product_id`, `auction_id`),
  INDEX `fk_products_auctions1_idx` (`auction_id` ASC),
  CONSTRAINT `fk_products_auctions1`
  FOREIGN KEY (`auction_id`)
  REFERENCES `auctions`.`auctions` (`auction_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Table `auctions`.`transactions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `auctions`.`transactions` (
  `offer_id` INT(11) NOT NULL,
  `date`     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`offer_id`),
  INDEX `fk_transactions_auctions1_idx` (`offer_id` ASC),
  CONSTRAINT `fk_transactions_users1`
  FOREIGN KEY (`offer_id`)
  REFERENCES `auctions`.`offers` (`offer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
)
  ENGINE = InnoDB
  DEFAULT CHARACTER SET = utf8
  COLLATE = utf8_polish_ci;

-- -----------------------------------------------------
-- Tworzenie widoków dla raportów
-- -----------------------------------------------------

create view day_report as
  select count(*) as 'count'
  from auctions
  where day(date) = day(current_timestamp)
  union ALL
  select count(*)
  from transactions
  where day(date) = day(current_timestamp)
  union ALL
  select sum(price)
  from transactions t
    inner join offers o on t.offer_id = o.offer_id
  where day(t.date) = day(current_timestamp)
  union ALL
  select count(*)
  from comments
  where day(date) = day(current_timestamp)
  union ALL
  select count(*)
  from offers
  where day(date) = day(current_timestamp);


create view month_report as
  select count(*) as 'count'
  from auctions
  where month(date) = month(current_timestamp)
  union ALL
  select count(*)
  from transactions
  where month(date) = month(current_timestamp)
  union ALL
  select sum(price)
  from transactions t
    inner join offers o on t.offer_id = o.offer_id
  where month(t.date) = month(current_timestamp)
  union ALL
  select count(*)
  from comments
  where month(date) = month(current_timestamp)
  union ALL
  select count(*)
  from offers
  where month(date) = month(current_timestamp);


create view year_report as
  select count(*) as 'count'
  from auctions
  where year(date) = year(current_timestamp)
  union ALL
  select count(*)
  from transactions
  where year(date) = year(current_timestamp)
  union ALL
  select sum(price)
  from transactions t
    inner join offers o on t.offer_id = o.offer_id
  where year(t.date) = year(current_timestamp)
  union ALL
  select count(*)
  from comments
  where year(date) = year(current_timestamp)
  union ALL
  select count(*)
  from offers
  where year(date) = year(current_timestamp);


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
